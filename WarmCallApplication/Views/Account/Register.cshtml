@model WarmCallApplication.Models.RegisterViewModel
<script>
    var priceList = @Html.Raw(Json.Encode(ViewBag.DesignationRoleLevelsAndPrices));
</script>
<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    

    <input type="hidden" name="UserMode" value="@ViewBag.UserMode"/>
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.MobileNumber, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.MobileNumber, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Organization, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Organization, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Designation, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Designation, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DesignationRoleLevel, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.DesignationRoleLevel, ViewBag.DesignationRoleLevels as IEnumerable<SelectListItem>, new { @class = "form-control", onchange = "setPrice()" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Price, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <span id="idPrice"></span>
            @Html.HiddenFor(m => m.Price)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.UserTimeZone, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.UserTimeZone, (List<SelectListItem>)ViewBag.timeZoneList, new { @class = "form-control" })
        </div> 
    </div>
    <div class="form-group">
        <div class="col-md-2">
        </div>
        <div class="col-md-10">
            <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Add Your Availabiity</button>
            <input type="hidden" name="UserAvailabilityJsonString" id="UserAvailabilityJsonString" value="@ViewBag.UserAvailabilityJsonString" />
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-primary" value="Register" />
        </div>
    </div>
}

@Html.Partial("~/Views/Shared/FullCalendar.cshtml")


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
